body:not(.bd-hideButton)
  [class*='layer-']
  > *
  > [class*='wrapper-']
  + [class*='flex'] {
  border-radius: 0;
}
.da-bannerImage:after {
  background-color: rgba($primary, .75);
}
.theme-dark {
  .da-nameDefault {
    color: darken($primary, 5);
  }
  .da-nameHovered {
    color: $primary;
  }
  [class^='container-'] > .da-containerDefault,
  .bd-isGuildChannel {
    & > .da-wrapper {
      &:hover:not([class*="modeSelected-"]) {
        & > .da-content {
          color: rgba(#fff, 0.675);
          background-color: transparent;
          border-color: lighten($black, 35);
          @include box-shadow(0 0 0 1px #000);
        }
      }
      &[class*="modeSelected-"] {
        & > .da-content {
          color: rgba(#fff, 1);
          background-color: rgba($primary, 0.25);
          border-color: lighten($black, 35);
          @include box-shadow(0 0 0 1px #000);
          &:hover {
            border-color: lighten($black, 40);
          }
          svg.da-icon {
            color: #fff;
            opacity: 1;
          }
        }
      }
      & > .da-content {
        margin: 0px 8px;
        @include transition(
          background-color 0.12s ease-out,
          color 0.12s ease-out,
          border-color 0.12s ease-out
        );
        @include border-radius(config(radius));
        border: 1px solid rgba(lighten($black, 25), 0);
        color: rgba(#fff, 0.35);
        &.da-contentSelectedText {
          color: rgba(#fff, 1);
          background-color: rgba($primary, 0.25);
          border-color: lighten($black, 35);
          @include box-shadow(0 0 0 1px #000);
          &:hover {
            border-color: lighten($black, 40);
          }
          svg.da-icon {
            color: #fff;
            opacity: 1;
          }
        }
      }
    }
  }
  .da-noChannel {
    background-color: $black;
  }
  .da-privateChannels {
    @if $hide-channel-scrollbar {
      @extend %noScrollbar;
    }
  }
  .da-channels {
    margin-bottom: config('userbar.height');
  }
  .da-channels,
  .da-privateChannels {
    @if $full-screen-background {
      background-color: $overlay-color;
    } @else {
      background-color: $black;
    }
    .da-channel:not(.bd-isPrivateChannel) {
      svg.da-linkButtonIcon {
        &,
        path[fill='currentColor'] {
          fill: $primary;
        }
      }
    }
    .bd-isPrivateChannel,
    .da-channel {
      & > a {
        @include transition(
          background-color 0.12s ease-out,
          color 0.12s ease-out,
          border-color 0.12s ease-out
        );
        background-color: transparent;
        @include border-radius(config(radius));
        border: 1px solid rgba(lighten($black, 25), 0);
        color: rgba(#fff, 0.35);
      }
      &.da-selected > a,
      &:hover > a {
        color: rgba(#fff, 0.675);
        background-color: lighten($black, 5);
        border-color: lighten($black, 35);
        @include box-shadow(0 0 0 1px #000);
      }
    }
    &.da-vertical {
      @include border-radius(0);
      @include box-shadow(inset -2px 0 0 -1px lighten($black, 20));
      & > .da-container {
        background-color: transparent;
      }
      & > .da-container:first-of-type:not(:last-of-type) {
        @if $hide-channel-scrollbar {
          @extend %noScrollbar;
        }
      }
      & > .da-container:last-of-type:not(:first-of-type) {
        $my: 2px;
        @include border-radius(0);
        position: fixed;
        left:0;
        bottom:0;
        margin: 0 0 $my $my;
        height: config("userbar.height") - $my;
        width: 270px - ($my + 1px);
        background-color: $black;
        border: 1px solid lighten($black, 20);
        border-width: 1px 1px 0 0;
        .da-avatar.da-small {
          position: relative;
          & > .da-inner {
            @include border-radius(config(icon-radius));
          }
          & > .da-status {
            border-color: $black;
            @include border-radius(config(icon-radius));
          }
        }
      }
    }
  }
}
